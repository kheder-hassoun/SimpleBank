@model SimpleBank.Models.Account

@{
    ViewData["Title"] = "Edit Account";
    var applicationUserId = ViewData["ApplicationUserId"];
}

<div class="container-fluid px-4 py-5">
    <!-- Header -->
    <header class="text-center mb-5 animate__animated animate__fadeIn">
        <h1 class="display-5 fw-bold text-gradient">Update Account</h1>
        <p class="lead text-muted">Modify your account details</p>
    </header>

    <!-- Form Card -->
    <div class="row justify-content-center animate__animated animate__fadeInUp">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg rounded-4 border-0">
                <div class="card-body p-5">
                    <form asp-action="Edit" method="post">
                        <!-- Account Number -->
                        <div class="form-floating mb-4">
                            <input type="text" class="form-control bg-light" id="AccountNumber"
                                   name="AccountNumber" required maxlength="20"
                                   value="@Model?.AccountNumber" readonly />
                            <label for="AccountNumber" class="text-muted">
                                <i class="fas fa-wallet me-2"></i>Account Number
                            </label>
                        </div>

                        <!-- Account Type -->
                        <div class="form-floating mb-4">
                            <input type="text" class="form-control" id="AccountType"
                                   name="AccountType" required value="@Model?.AccountType" />
                            <label for="AccountType" class="text-muted">
                                <i class="fas fa-credit-card me-2"></i>Account Type
                            </label>
                            @if (ViewData.ModelState["AccountType"]?.Errors.Count > 0)
                            {
                                <div class="invalid-feedback d-block">
                                    @foreach (var error in ViewData.ModelState["AccountType"].Errors)
                                    {
                                        <span>@error.ErrorMessage</span>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Balance -->
                        <div class="form-floating mb-4">
                            <input type="number" class="form-control" id="Balance"
                                   name="Balance" required value="@Model?.Balance" />
                            <label for="Balance" class="text-muted">
                                <i class="fas fa-coins me-2"></i>Current Balance
                            </label>
                            @if (ViewData.ModelState["Balance"]?.Errors.Count > 0)
                            {
                                <div class="invalid-feedback d-block">
                                    @foreach (var error in ViewData.ModelState["Balance"].Errors)
                                    {
                                        <span>@error.ErrorMessage</span>
                                    }
                                </div>
                            }
                        </div>

                        <input type="hidden" name="ApplicationUserId" value="@applicationUserId" />

                        <!-- Submit Button -->
                        <div class="d-grid mt-4">
                            <button type="submit" class="btn btn-primary btn-lg rounded-pill">
                                Save Changes <i class="fas fa-save ms-2"></i>
                            </button>
                        </div>
                    </form>

                    <!-- Back Link -->
                    <div class="text-center mt-4">
                        <a href="@Url.Action("Index", "Account")" class="btn btn-link text-decoration-none">
                            <i class="fas fa-arrow-left me-2"></i>Back to Accounts
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom Styles (ensure these are in your site.css) */
    .text-gradient {
        background: linear-gradient(45deg, #6366F1, #8B5CF6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .card {
        background: rgba(255,255,255,0.95);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.2);
    }

    .form-control {
        border-radius: 0.75rem;
        border: 1px solid #dee2e6;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #6366F1;
        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }

    .btn-primary {
        background: linear-gradient(135deg, #6366F1, #8B5CF6);
        border: none;
        padding: 1rem 2rem;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px -5px rgba(99, 102, 241, 0.3);
    }

    .bg-light {
        background-color: #f8f9fa!important;
    }
</style>